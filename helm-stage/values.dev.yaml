tag: dev

ingress:
  annotations:
    kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: nginx
    ingress.kubernetes.io/proxy-body-size: "250m"
    nginx.org/client-body-timeout: "3600"
    nginx.org/client-max-body-size: 250m
    nginx.org/proxy-connect-timeout: "3600"
    nginx.org/proxy-read-timeout: "3600"
    nginx.org/proxy-send-timeout: "3600"
#     nginx.ingress.kubernetes.io/configuration-snippet: |
#       add_header Content-Security-Policy "frame-ancestors mpass.staging.egov.md;";

ingress_back:
  annotations:
    kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: nginx
    ingress.kubernetes.io/proxy-body-size: "250m"
    nginx.org/client-body-timeout: "3600"
    nginx.org/client-max-body-size: 250m
    nginx.org/proxy-connect-timeout: "3600"
    nginx.org/proxy-read-timeout: "3600"
    nginx.org/proxy-send-timeout: "3600"
    # nginx.ingress.kubernetes.io/configuration-snippet: |
    #   add_header Content-Security-Policy "frame-ancestors mpass.staging.egov.md;";

# api variables
reru_public_gateway:
  name: "reru-public-gateway"
  replicas: 1
  image:
    repository: cvuintell/reru-public-gateway

  deployment: # variables for api deployment
    resources:
      requests:
        memory: "250Mi"
        cpu: "250m"
      limits:
        memory: "256Mi"
        cpu: "300m"
  ingress:
    enabled: true
    host: reru-stage.codwer.com
    path: /
    secretname: reru-codwer-com-public-gateway
    livenessProbe: /api/discover

  service:
    port: 8080
    portName: out
    type: ClusterIP

reru_internal_gateway:
  name: "reru-internal-gateway"
  replicas: 1
  image:
    repository: cvuintell/reru-internal-gateway

reru_core:
  name: "reru-core"
  replicas: 1
  image:
    repository: cvuintell/reru-core
  database:
    connection_string: server=prod-db-mssql.prod-mssql;database=RERU-Core-STAGE;User=sa;Password=FXW}t,HLjM:TSpR;
    identity_connection_string: server=prod-db-mssql.prod-mssql;database=RERU-Identity-STAGE;User=sa;Password=FXW}t,HLjM:TSpR;
    log_connection_string: server=prod-db-mssql.prod-mssql;database=RERU-Logging-STAGE;User=sa;Password=FXW}t,HLjM:TSpR;

reru_identity_migrator:
  enabled: true
  name: "reru-identity-migrator"
  replicas: 1
  image:
    repository: cvuintell/reru-identity-migrator
  database:
    connection_string: server=prod-db-mssql.prod-mssql;database=RERU-Identity-STAGE;User=sa;Password=FXW}t,HLjM:TSpR;

reru_core_fe:
  name: "reru-core-fe"
  replicas: 1
  image:
    repository: cvuintell/reru-core-fe

reru_personal_fe:
  name: "reru-personal-fe"
  replicas: 1
  image:
    repository: cvuintell/reru-personal-fe

reru_personal:
  name: "reru-personal"
  replicas: 1
  image:
    repository: cvuintell/reru-personal
  database:
    connection_string: server=prod-db-mssql.prod-mssql;database=RERU-Personal-STAGE;User=sa;Password=FXW}t,HLjM:TSpR;MultipleActiveResultSets=True;
    log_connection_string: server=prod-db-mssql.prod-mssql;database=RERU-Logging-STAGE;User=sa;Password=FXW}t,HLjM:TSpR;

reru_evaluation_fe:
  name: "reru-evaluation-fe"
  replicas: 1
  image:
    repository: cvuintell/reru-evaluation-fe

reru_evaluation:
  name: "reru-evaluation"
  replicas: 1
  image:
    repository: cvuintell/reru-evaluation
  database:
    connection_string: server=prod-db-mssql.prod-mssql;database=RERU-Evaluation-STAGE;User=sa;Password=FXW}t,HLjM:TSpR;
    log_connection_string: server=prod-db-mssql.prod-mssql;database=RERU-Logging-STAGE;User=sa;Password=FXW}t,HLjM:TSpR;

reru_logging_fe:
  name: "reru-logging-fe"
  replicas: 1
  image:
    repository: cvuintell/reru-logging-fe

reru_logging:
  name: "reru-logging"
  replicas: 1
  image:
    repository: cvuintell/reru-logging
  database:
    log_connection_string: server=prod-db-mssql.prod-mssql;database=RERU-Logging-STAGE;User=sa;Password=FXW}t,HLjM:TSpR;

microservices:
  - test_saml:
    service:
      createService: true
    deployment:
      createDeployment: true
      replicas: 1
      volumes:
        - name: global-application-settings
          configMap:
            name: global-application-settings
      image: hashpe/docker-test-saml-idp
      tag: latest
      env:
        - name: SIMPLESAMLPHP_SP_ENTITY_ID
          value: "http://reru-stage.codwer.com"
        - name: SIMPLESAMLPHP_SP_ASSERTION_CONSUMER_SERVICE
          value: "http://reru-stage.codwer.com/ms/reru-identity-new/Saml2/Acs"
        - name: SIMPLESAMLPHP_SP_SINGLE_LOGOUT_SERVICE
          value: "http://reru-stage.codwer.com/ms/reru-identity-new/Saml2/Signout"
        - name: SIMPLESAMLPHP_BASE_URL_PATH
          value: "http://reru-stage.codwer.com/ms/saml2/simplesaml/"

    name: "test-saml"
    port: 8080

  - reru_identity_new:
    service:
      createService: true
    deployment:
      createDeployment: true
      replicas: 1
      volumes:
        - name: global-application-settings
          configMap:
            name: global-application-settings
      image: cvuintell/reru-identity-new
      tag: dev
      useImagePullSecrets: true
      env:
        - name: ASPNETCORE_URLS
          value: "http://*:8080"
        - name: ASPNETCORE_ENVIRONMENT
          value: "Production"
        - name: BASE_PATH
          value: "/ms/reru-identity-new"
        - name: SAML_METADATA_ENDPOINT
          value: "http://reru-stage.codwer.com/ms/saml2/simplesaml/saml2/idp/metadata.php"
        - name: SAML_ENTITY_ID
          value: "http://reru-stage.codwer.com"
        - name: SAML_CORS_PATH
          value: "/Saml2/Acs"
        - name: SAML_ENDPOINT
          value: "http://reru-stage.codwer.com"
        - name: ConnectionStrings__Default
          value: "server=prod-db-mssql.prod-mssql;database=RERU-Identity-STAGE;User=sa;Password=FXW}t,HLjM:TSpR;"
        - name: IDENTITY_ISSUER_URI
          value: "http://reru-stage.codwer.com/ms/reru-identity-new"
        - name: IDENTITY_DISCOVERY_ENDPOINT_URI
          value: "http://reru-stage.codwer.com"
      appsettings: reru_identity_new.appsettings.json
    name: "reru-identity-new"
    port: 8080

minio:
  persistence:
    enabled: false
    # annotations: 
    #   - test

    storageClass: "local-path"
    VolumeName: "minio-volume"
    accessMode: ReadWriteOnce
    size: 20Gi

    subPath: ""

  accessKey: "minioaccesskey"
  secretKey: "miniosecretkey"
  mountPath: "/export"
  port: 8080