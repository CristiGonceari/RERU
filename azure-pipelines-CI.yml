trigger: none
resources:
  - repo: self

variables:
  tag: ci
  containerRegistry: cvuintell-docker-hub
  HELM_VERSION: "3.0.2"
  devK8sService: cvuintell-erp-azure-k8s

stages:
  - stage: Build
    displayName: Building Images and  publishing images
    jobs:
      - job: Build
        displayName: Build images
        pool:
          name: "Default"

        steps:
          - task: PowerShell@2
            displayName: Calculating changed projects
            inputs:
              targetType: "inline"
              pwsh: true
              script: |
                $files=$(git diff HEAD HEAD~ --name-only)
                $temp=$files -split ' '
                $count=$temp.Length
                echo "Total changed $count files"
                For ($i=0; $i -lt $temp.Length; $i++)
                {
                  $name=$temp[$i]
                  echo "this is $name file"
                  if ($name -like "src/Microservices/CODWER.RERU.Identity/CODWER.RERU.IdentityMigrator.Console/*")
                    {
                      Write-Host "##vso[task.setvariable variable=BuildIdentityMigrator]True"
                    }

                  if ($name -like "src/Microservices/CODWER.RERU.Identity/CODWER.RERU.Identity.Web/*")
                    {
                      Write-Host "##vso[task.setvariable variable=BuildIdentityNew]True"
                    }

                  if ($name -like "src/Microservices/CODWER.RERU.Gateway/CODWER.RERU.Gateway.Public/*")
                    {
                      Write-Host "##vso[task.setvariable variable=BuildPublicGateway]True"
                    }

                  if ($name -like "src/Microservices/CODWER.RERU.Gateway/CODWER.RERU.Gateway.Internal/*")
                    {
                      Write-Host "##vso[task.setvariable variable=BuildInternalGateway]True"
                    }

                  if ($name -like "src/Microservices/CODWER.RERU.Core/*")
                    {
                      Write-Host "##vso[task.setvariable variable=BuildCore]True"
                    }

                  if ($name -like "src/Microservices/CODWER.RERU.Personal/*")
                    {
                      Write-Host "##vso[task.setvariable variable=BuildPersonal]True"
                    }                

                  if ($name -like "src/Microservices/CODWER.RERU.Evaluation/*")
                    {
                      Write-Host "##vso[task.setvariable variable=BuildEvaluation]True"
                    }


                  if ($name -like "src/Front-End/reru/projects/core/*")
                    {
                      Write-Host "##vso[task.setvariable variable=BuildCoreFe]True"
                    }

                  if ($name -like "src/Front-End/reru/projects/personal/*")
                    {
                      Write-Host "##vso[task.setvariable variable=BuildPersonalFE]True"
                    }

                  if ($name -like "src/Front-End/reru/projects/evaluation/*")
                    {
                      Write-Host "##vso[task.setvariable variable=BuildEvaluationFE]True"
                    }

                  if ($name -like "src/Front-End/reru/projects/erp-shared/*")
                    {
                      Write-Host "##vso[task.setvariable variable=BuildEvaluationFE]True"
                      Write-Host "##vso[task.setvariable variable=BuildPersonalFE]True"
                      Write-Host "##vso[task.setvariable variable=BuildCoreFe]True"
                    }
                }
          - task: Docker@2
            displayName: Building Public Gateway image
            inputs:
              command: build
              dockerfile: "docker-files/Dockerfile-RERU-PublicGateway"
              tags: |
                $(tag)
            condition: and(succeeded(), eq(variables['BuildPublicGateway'], 'True'))

          - task: Docker@2
            displayName: Building InternalGateway Gateway image
            inputs:
              command: build
              dockerfile: "docker-files/Dockerfile0-RERU-InternalGateway"
              tags: |
                $(tag)
            condition: and(succeeded(), eq(variables['BuildInternalGateway'], 'True'))

          - task: Docker@2
            displayName: Building Identity image
            inputs:
              command: build
              dockerfile: "docker-files/Dockerfile-RERU-Identity"
              tags: |
                $(tag)
            condition: and(succeeded(), eq(variables['BuildIdentityNew'], 'True'))

          - task: Docker@2
            displayName: Building Identity Migrator image
            inputs:
              command: build
              dockerfile: "docker-files/Dockerfile-RERU-IdentityMigrator"
              tags: |
                $(tag)
            condition: and(succeeded(), eq(variables['BuildIdentityMigrator'], 'True'))

          - task: Docker@2
            displayName: Building Core front end image
            inputs:
              command: build
              dockerfile: "docker-files/Dockerfile-RERU-Core-FE"
              tags: |
                $(tag)
            condition: and(succeeded(), eq(variables['BuildCoreFe'], 'True'))

          - task: Docker@2
            displayName: Building Core image
            inputs:
              command: build
              dockerfile: "docker-files/Dockerfile-RERU-Core"
              tags: |
                $(tag)
            condition: and(succeeded(), eq(variables['BuildCore'], 'True'))

          - task: Docker@2
            displayName: Building Personal front end  image
            inputs:
              command: build
              dockerfile: "docker-files/Dockerfile-RERU-Personal-FE"
              tags: |
                $(tag)
            condition: and(succeeded(), eq(variables['BuildPersonalFE'], 'True'))

          - task: Docker@2
            displayName: Building Personal back end image
            inputs:
              command: build
              dockerfile: "docker-files/-RERU-Personal"
              tags: |
                $(tag)
            condition: and(succeeded(), eq(variables['BuildPersonal'], 'True'))

          - task: Docker@2
            displayName: Building Evaluation front end  image
            inputs:
              command: build
              dockerfile: "docker-files/Dockerfile-RERU-Evaluation-FE"
              tags: |
                $(tag)
            condition: and(succeeded(), eq(variables['BuildEvaluationFE'], 'True'))

          - task: Docker@2
            displayName: Building Evaluation back end image
            inputs:
              command: build
              dockerfile: "docker-files/Dockerfile-RERU-Evaluation"
              tags: |
                $(tag)
            condition: and(succeeded(), eq(variables['BuildEvaluation'], 'True'))
            
            
          - task: CmdLine@2
            displayName: Clean all docker resources
            inputs:
              script: 'docker system prune -a --force' 

