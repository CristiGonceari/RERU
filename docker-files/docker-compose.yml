version: "3.4"

# Settings and configurations that are common for all containers
# x-minio-common: &minio-common
#   image: quay.io/minio/minio:RELEASE.2021-11-24T23-19-33Z
#   command: server --console-address ":9001" http://minio{1...4}/data{1...2}
#   expose:
#     - "9000"
#     - "9001"
#   environment:
#     MINIO_ROOT_USER: minio
#     MINIO_ROOT_PASSWORD: minio123
#   healthcheck:
#     test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
#     interval: 30s
#     timeout: 20s
#     retries: 3
#   networks:
#     - my-network

services:
  # minio1:
  #   <<: *minio-common
  #   hostname: minio1
  #   volumes:
  #     - data1-1:/data1
  #     - data1-2:/data2
  #   networks:
  #     - my-network

  # minio2:
  #   <<: *minio-common
  #   hostname: minio2
  #   volumes:
  #     - data2-1:/data1
  #     - data2-2:/data2
  #   networks:
  #     - my-network

  # minio3:
  #   <<: *minio-common
  #   hostname: minio3
  #   volumes:
  #     - data3-1:/data1
  #     - data3-2:/data2
  #   networks:
  #     - my-network

  # minio4:
  #   <<: *minio-common
  #   hostname: minio4
  #   volumes:
  #     - data4-1:/data1
  #     - data4-2:/data2
  #   networks:
  #     - my-network

  nginx:
    image: nginx:1.19.2-alpine
    hostname: nginx
    volumes:
      - ./minio-nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9000:9000"
      - "9001:9001"
    # depends_on:
    #   - minio1
    #   - minio2
    #   - minio3
    #   - minio4
    networks:
      - my-network
      
  reru-identity-migrator:
    container_name: reru-identity-migrator
    networks:
      - my-network
    build:
      context: ../
      dockerfile: ./docker-files/Dockerfile-RERU-IdentityMigrator
    volumes:
      - ./docker-settings/Identity/IdentityMigrator/appsettings.json:/app/appsettings.json
    depends_on:
      - db

  reru-storage-migrator:
    container_name: reru-storage-migrator
    networks:
      - my-network
    build:
      context: ../
      dockerfile: ./docker-files/Dockerfile-RERU-StorageMigrator
    volumes:
      - ./docker-settings/Identity/IdentityMigrator/appsettings.json:/app/appsettings.json
    depends_on:
      - db

  reru-identity-new:
    hostname: reru-identity-new
    networks:
      - my-network
    container_name: reru-identity-new
    build:
      context: ../
      dockerfile: ./docker-files/Dockerfile-RERU-Identity
    ports: 
      - 9999:8080
    environment:
      - ASPNETCORE_URLS=http://*:8080
      - ASPNETCORE_ENVIRONMENT=Development
      - BASE_PATH=/ms/reru-identity-new
      - SAML_METADATA_ENDPOINT=http://reru-saml2:8080/simplesaml/saml2/idp/metadata.php
      - SAML_ENTITY_ID=http://localhost:10000
      - SAML_ENDPOINT=http://reru-saml2:8080
      - ConnectionStrings__Identity=server=db;Port=5432;Username=postgres;Password=postgres;Database=RERU-Identity;
      - IDENTITY_ISSUER_URI=http://reru-identity-new:8080/ms/reru-identity-new
      - IDENTITY_DISCOVERY_ENDPOINT_URI=http://localhost:10000
    volumes:
      - ./docker-settings/Identity/IdentityWeb/appsettings.json:/app/appsettings.json
    depends_on:
      - db
      - reru-identity-migrator
      - reru-storage-migrator

  reru-saml2:
    hostname: reru-saml2
    networks:
      - my-network
    container_name: reru-saml2
    image: hashpe/docker-test-saml-idp
    ports: 
      - 8080:8080
    environment:
      - SIMPLESAMLPHP_SP_ENTITY_ID=http://localhost:10000
      - SIMPLESAMLPHP_SP_ASSERTION_CONSUMER_SERVICE=http://localhost:10000/ms/reru-identity-new/Saml2/Acs
      - SIMPLESAMLPHP_SP_SINGLE_LOGOUT_SERVICE=http://localhost:10000/ms/reru-identity-new/Saml2/Signout"
      - SIMPLESAMLPHP_BASE_URL_PATH=simplesaml/

  reru-public-gateway:
    hostname: localhost
    networks:
      - my-network
    container_name: reru-public-gateway
    build:
      context: ../
      dockerfile: ./docker-files/Dockerfile-RERU-PublicGateway
    environment:
      - ASPNETCORE_URLS=http://*:8080
      - ASPNETCORE_ENVIRONMENT=Production
    ports:
      - 10000:8080
    volumes:
      - ./docker-settings/Gateway/Public/appsettings.json:/app/appsettings.json

  reru-internal-gateway:
    hostname: localhost
    networks:
      - my-network
    container_name: reru-internal-gateway
    build:
      context: ../
      dockerfile: ./docker-files/Dockerfile-RERU-InternalGateway
    environment:
      - ASPNETCORE_URLS=http://*:8080
      - ASPNETCORE_ENVIRONMENT=Production
    ports:
      - 10002:8080
    volumes:
      - ./docker-settings/Gateway/Internal/appsettings.json:/app/appsettings.json

  reru-logging:
    hostname: localhost
    networks:
      - my-network
    container_name: reru-logging
    build:
      context: ../
      dockerfile: ./docker-files/Dockerfile-RERU-Logging
    environment:
      - ASPNETCORE_URLS=http://*:8080
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__Log=server=db;Port=5432;Database=RERU-Logging;Username=postgres;Password=postgres;
    volumes:
      - ./docker-settings/Logging/appsettings.json:/app/appsettings.json
    depends_on:
      - db
      - reru-identity-migrator
      - reru-storage-migrator

  reru-logging-fe:
    hostname: localhost
    networks:
      - my-network
    container_name: reru-logging-fe
    build:
      context: ../
      dockerfile: ./docker-files/Dockerfile-RERU-Logging-FE
    volumes:
      - ./docker-settings/Logging-FE/appsettings.json:/usr/share/nginx/html/assets/config/appsettings.json

  reru-core:
    hostname: localhost
    networks:
      - my-network
    container_name: reru-core
    build:
      context: ../
      dockerfile: ./docker-files/Dockerfile-RERU-Core
    environment:
      - ASPNETCORE_URLS=http://*:8080
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__RERU=server=db;Port=5432;Username=postgres;Password=postgres;Database=RERU-Common;
      - ConnectionStrings__Identity=server=db;Port=5432;Username=postgres;Password=postgres;Database=RERU-Identity;
      - ConnectionStrings__Log=server=db;Port=5432;Username=postgres;Password=postgres;Database=RERU-Logging;
      - ConnectionStrings__Storage=server=db;Port=5432;Username=postgres;Password=postgres;Database=RERU-Storage;
      - ConnectionStrings__HangfireCore=server=db;Port=5432;Username=postgres;Password=postgres;Database=Hangfire-Core;
    volumes:
      - ./docker-settings/Core/appsettings.json:/app/appsettings.json
    depends_on:
      - db
      - reru-identity-migrator
      - reru-storage-migrator

  reru-core-fe:
    hostname: localhost
    networks:
      - my-network
    container_name: reru-core-fe
    build:
      context: ../
      dockerfile: ./docker-files/Dockerfile-RERU-Core-FE
    volumes:
      - ./docker-settings/Core-FE/appsettings.json:/usr/share/nginx/html/assets/config/appsettings.json

  reru-personal:
    hostname: localhost
    networks:
      - my-network
    container_name: reru-personal
    build:
      context: ../
      dockerfile: ./docker-files/Dockerfile-RERU-Personal
    environment:
      - ASPNETCORE_URLS=http://*:8080
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__RERU=server=db;Port=5432;Username=postgres;Password=postgres;Database=RERU-Common;
      - ConnectionStrings__Log=server=db;Port=5432;Username=postgres;Password=postgres;Database=RERU-Logging;
      - ConnectionStrings__HangfirePersonal=server=db;Port=5432;Username=postgres;Password=postgres;Database=Hangfire-Personal;
    volumes:
      - ./docker-settings/Personal/appsettings.json:/app/appsettings.json
    depends_on:
      - db
      - reru-identity-migrator
      - reru-storage-migrator

  reru-personal-fe:
    hostname: localhost
    networks:
      - my-network
    container_name: reru-personal-fe
    build:
      context: ../
      dockerfile: ./docker-files/Dockerfile-RERU-Personal-FE
    volumes:
      - ./docker-settings/Personal-FE/appsettings.json:/usr/share/nginx/html/assets/config/appsettings.json

  reru-evaluation:
    hostname: localhost
    networks:
      - my-network
    container_name: reru-evaluation
    build:
      context: ../
      dockerfile: ./docker-files/Dockerfile-RERU-Evaluation
    environment:
      - ASPNETCORE_URLS=http://*:8080
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__RERU=server=db;Port=5432;Username=postgres;Password=postgres;Database=RERU-Common;
      - ConnectionStrings__HangfireEvaluation=server=db;Port=5432;Username=postgres;Password=postgres;Database=Hangfire-Evaluation;
      - ConnectionStrings__Log=server=db;Port=5432;Username=postgres;Password=postgres;Database=RERU-Logging;
    volumes:
      - ./docker-settings/Evaluation/appsettings.json:/app/appsettings.json
    depends_on:
      - db
      - reru-identity-migrator
      - reru-storage-migrator

  reru-evaluation-fe:
    hostname: localhost
    networks:
      - my-network
    container_name: reru-evaluation-fe
    build:
      context: ../
      dockerfile: ./docker-files/Dockerfile-RERU-Evaluation-FE
    volumes:
      - ./docker-settings/Evaluation-FE/appsettings.json:/usr/share/nginx/html/assets/config/appsettings.json
      
  reru-evaluation360:
    hostname: localhost
    networks:
      - my-network
    container_name: reru-evaluation360
    build:
      context: ../
      dockerfile: ./docker-files/Dockerfile-RERU-Evaluation360
    environment:
      - ASPNETCORE_URLS=http://*:8080
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__RERU=server=db;Port=5432;Username=postgres;Password=postgres;Database=RERU-Common;
      - ConnectionStrings__HangfireEvaluation=server=db;Port=5432;Username=postgres;Password=postgres;Database=Hangfire-Evaluation;
      - ConnectionStrings__Log=server=db;Port=5432;Username=postgres;Password=postgres;Database=RERU-Logging;
    volumes:
      - ./docker-settings/Evaluation360/appsettings.json:/app/appsettings.json
    depends_on:
      - db
      - reru-identity-migrator
      - reru-storage-migrator

  reru-evaluation360-fe:
    hostname: localhost
    networks:
      - my-network
    container_name: reru-evaluation360-fe
    build:
      context: ../
      dockerfile: ./docker-files/Dockerfile-RERU-Evaluation360-FE
    volumes:
      - ./docker-settings/Evaluation360-FE/appsettings.json:/usr/share/nginx/html/assets/config/appsettings.json

  # db:
  #   container_name: erp-sql-server
  #   networks:
  #     - my-network
  #   image: "mcr.microsoft.com/mssql/server"
  #   environment:
  #     SA_PASSWORD: "Your_password123"
  #     ACCEPT_EULA: "Y"
  #   ports:
  #     - 1444:1433

  db:
    container_name: erp-sql-postgres
    networks:
      - my-network
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'

  ubuntu:
    container_name: ubuntu
    networks:
      - my-network
    image: "ubuntu:21.04"
    command: tail -F anything

networks:
  my-network:
    external: true