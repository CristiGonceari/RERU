/* Declaring variables */
$border-radius: 0.231rem;
$rounded-border-radius: 0.85rem;
$root-font-size: 13px;

$blue-color: #3699ff;
$blue-light-color: #70b7ff;

$font-family: Poppins, Helvetica, "sans-serif";

$desktop-height-difference-height: 264px; /* ONLY CHANGE IF MAIN LAYOU HEIGHT IS CHANGED*/

/* Global selectors */
.mat-body,
.mat-body-1,
body.mat-typography,
body {
  font-family: $font-family;
  font-size: $root-font-size !important;
}

/* End Global selectors*/

/* FONT SIZES */
.font-size-small {
  font-size: 0.9rem !important;
}
.font-size-smaller {
  font-size: 0.7rem !important;
}
/* FONT SIZES */

/* Notifications layout */
.simple-notification div,
.simple-notification {
  color: #FFF;
}


/* Rewrite Dropdown menu */
.navi.navi-hover .navi-item .navi-link:hover,
div.dahsboard-component a.nav-link,
div.card.card-custom,
.datatable.datatable-default>.datatable-pager>.datatable-pager-nav>li>a.datatable-pager-link,
div.dropdown-menu {
  border-radius: $border-radius;
}

/* Hide input type number arrows */
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

input[type=number] {
  -moz-appearance: textfield;
}

/* Rewrite border-radius across project */
// textarea[class^='form-control'],
// input[class^='form-control'],
// select[class^='form-control'] {
//   border-radius: $border-radius;
// }

/* Rewriting tag-input module  */
tag-input {
  div.ng2-tag-input {
    border-bottom: none !important;

    tag {
      border-radius: 12px !important;
      margin: .1rem .3rem !important;
      background: $blue-light-color !important;
      line-height: 32px !important;

      &:hover,
      &:active,
      &:focus {
        background: $blue-color  !important;
      }

      .tag__text {
        color: #fff;
        padding: 0 0 0 5px;
      }

      delete-icon {
        width: 25px;
        padding: 0 5px 0 0;

        svg path {
          fill: white !important;
          padding: 0 5px 0 0;
        }
      } 

    }
  }

  input.ng2-tag-input__text-input,
  .ng2-tag-input__text-input {
    padding: 0 !important;
    background: transparent;
    font-family: $font-family !important;
  }
}

.custom-file-upload {
  color: #FFF !important;
  border-radius: 0.3rem !important;
  background: #6993FF;

  &:hover {
    color: #FFF;
    background: #4A7DFF;
  }
}

.expandable {
  min-height: 10px !important;
}
/* End rewriting tag-input */

/* Ckeditor */
div.ck-content {
  background: #F3F6F9;
}
/* End Ckeditor */

/* Test Custom */
.text-blue {
  color: $blue-color;
}

.text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

/* End Text custom */

/* Buttons Color custom */
.bg-blue {
  background: $blue-light-color;
}

.btn.btn-blue {
  color: white;
  background: $blue-light-color;
  border-color: transparent;
  background-blend-mode: lighten;

  &:hover {
    color: white;
    background: $blue-color;
  }
}

/* End Buttons Color custom */

/* Badge custom Style */
.badge {
  border-radius: $rounded-border-radius !important;
  padding: 0.55rem !important;
}
/* End Badge custom Style */

/* Card , Cards Bootstrap Addons - Desktop mobile */
/* Use for one page */
div.wrapper.enclosed {
  .card.erp-shared-desktop-wide {
    height: calc(100vh - #{$desktop-height-difference-height});
  }
  
  /* Use for one piece in a page */
  .card.erp-shared-half-desktop-wide {
    height: calc(50vh - 100px);
  }
  
  /* Use for two pieces in a page */
  .card.erp-shared-half-piece-desktop-wide {
    height: calc(50vh - 140px);
  }

  /* Deactivation (enclosed mode) wide tables for mobile */
  .card.erp-shared-desktop-wide,
  .card.erp-shared-half-desktop-wide
  .card.erp-shared-half-piece-desktop-wide {
    @media screen and (max-width: 992px) {
      height: auto;
    }
  }
}
/* END Card , Cards Bootstrap Addons - Desktop mobile */

/* CANVAS OFFMOBILE FIX HIDE */
.offcanvas-mobile {
  @media (max-width: 991.98px) {
    display:block;
    overflow:hidden;
    height:0;
  }
}
/* END CANVAS OFFMOBILE FIX HIDE */

/* erp-shared-table */
div.wrapper.enclosed {
  div[class^='table-responsive'] {
    &::-webkit-scrollbar {
      cursor: pointer;
      width: 5px !important;
    }
    &::-webkit-scrollbar-track {
      background: transparent;
    }
    &::-webkit-scrollbar-thumb {
      background: #898989;
    }
    table.erp-shared-table {
      $responsive-cancellation-effect-width: 992px; 
      tbody {
        display:block;
        max-height: calc(60vh - 252px);
        overflow-y :auto;
        overflow-x : hidden;
        &::-webkit-scrollbar {
          cursor: pointer;
          width: 10px !important;
        }
        &::-webkit-scrollbar-track {
          background: transparent;
        }
        &::-webkit-scrollbar-thumb {
          background: #898989;
        }
        @media screen and (max-width: $responsive-cancellation-effect-width) {
          display: table-row-group;
          max-height: unset;
          overflow: hidden;
          table-layout: unset;
        }
      }
    
      thead, tbody tr {
        display:table;
        width: 100%;
        table-layout:fixed;
        @media screen and (max-width: $responsive-cancellation-effect-width) {
          table-layout: unset;
        }
      }
    
      thead {
        @media screen and (max-width: $responsive-cancellation-effect-width) {
          display: table-header-group;
          table-layout: unset;
        }
      }
    
      thead tr th,
      tbody tr td {
        min-width: 100px;
        width: 100px;
      }
    
      tbody tr {
        @media screen and (max-width: $responsive-cancellation-effect-width) {
          display: table-row;
        }
      }
    }
  }
}
/* END erp-shared-table */

/* Custom Gap property*/
@for $i from 1 through 5 {
  .gap-#{$i} {
      @if $i == 1 {
        gap: 0.25rem;
      } @else if $i == 2 {
        gap: 0.5rem;
      } @else if $i == 3 {
        gap: 1rem;
      } @else if $i == 4 {
        gap: 1.5rem;
      } @else if $i == 5 {
        gap: 3rem;
      }
  }

  .gap-sm-#{$i} {
    @media screen and (min-width: 576px) {
      @if $i == 1 {
        gap: 0.25rem;
      } @else if $i == 2 {
        gap: 0.5rem;
      } @else if $i == 3 {
        gap: 1rem;
      } @else if $i == 4 {
        gap: 1.5rem;
      } @else if $i == 5 {
        gap: 3rem;
      }
    }
  }

  .gap-md-#{$i} {
    @media screen and (min-width: 768px) {
      @if $i == 1 {
        gap: 0.25rem;
      } @else if $i == 2 {
        gap: 0.5rem;
      } @else if $i == 3 {
        gap: 1rem;
      } @else if $i == 4 {
        gap: 1.5rem;
      } @else if $i == 5 {
        gap: 3rem;
      }
    }
  }

  .gap-lg-#{$i} {
    @media screen and (min-width: 992px) {
      @if $i == 1 {
        gap: 0.25rem;
      } @else if $i == 2 {
        gap: 0.5rem;
      } @else if $i == 3 {
        gap: 1rem;
      } @else if $i == 4 {
        gap: 1.5rem;
      } @else if $i == 5 {
        gap: 3rem;
      }
    }
  }

  .gap-xl-#{$i} {
    @media screen and (min-width: 1200px) {
      @if $i == 1 {
        gap: 0.25rem;
      } @else if $i == 2 {
        gap: 0.5rem;
      } @else if $i == 3 {
        gap: 1rem;
      } @else if $i == 4 {
        gap: 1.5rem;
      } @else if $i == 5 {
        gap: 3rem;
      }
    }
  }

  .gap-0 {
    gap: 0;
  }

  .gap-sm-0 {
    @media screen and (min-width: 576px) {
      gap: 0;
    }
  }

  .gap-md-0 {
    @media screen and (min-width: 768px) {
      gap: 0;
    }
  }

  .gap-lg-0 {
    @media screen and (min-width: 992px) {
      gap: 0;
    }
  }

  .gap-xl-0 {
    @media screen and (min-width: 1200px) {
      gap: 0;
    }
  }
}

/* END Custom Gap property*/

/* NGX-DROPZONE */
ngx-dropzone {
  font-family: Arial;
} 
/* END NGX-DROPZONE */

/* Bootstrap Modal classes */
ngb-modal-window.full-size-modal {
  div.modal-dialog {
    max-width: calc(100% - 30px);
    div.modal-content {
      // height: calc(100vh);
    }

    @media screen and (max-width: 992px) {
      max-width: 100%;
      // div.modal-content {
      //   height: 100%;
      // }
    }
  }
}
/* Bootstrap Modal classes */
