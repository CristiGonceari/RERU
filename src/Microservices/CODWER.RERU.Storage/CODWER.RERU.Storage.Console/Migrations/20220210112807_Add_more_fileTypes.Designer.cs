// <auto-generated />
using System;
using CVU.ERP.StorageService.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CODWER.RERU.Storage.Console.Migrations
{
    [DbContext(typeof(StorageDbContext))]
    [Migration("20220210112807_Add_more_fileTypes")]
    partial class Add_more_fileTypes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CVU.ERP.StorageService.Entities.File", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BucketName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FileType")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UniqueFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FileType");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("SpatialFocus.EntityFrameworkCore.Extensions.EnumWithNumberLookup<CVU.ERP.StorageService.Entities.FileTypeEnum>", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("FileTypeEnum");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Question"
                        },
                        new
                        {
                            Id = 2,
                            Name = "TestTemplate"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Test"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Media"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Documents"
                        },
                        new
                        {
                            Id = 6,
                            Name = "IdentityFiles"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Photos"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Request"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Order"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Cim"
                        });
                });

            modelBuilder.Entity("CVU.ERP.StorageService.Entities.File", b =>
                {
                    b.HasOne("SpatialFocus.EntityFrameworkCore.Extensions.EnumWithNumberLookup<CVU.ERP.StorageService.Entities.FileTypeEnum>", null)
                        .WithMany()
                        .HasForeignKey("FileType")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
